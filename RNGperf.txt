         Random Number Generators

Generation rate (random bits/second)

DUE             31.9 mbs  (TRNG) @84mhz
Raspberry PI      .89 mbs  /dev/hwrng
edison RDRAND      33  mbs (TRNG)   @500mhz
pyboard           36.5 mbs  (2 mbs python) STM32F405RG (TRNG) @168mhz
DISCOVERY         37.2 mbs STM32F407VET6 (TRNG) @80mhz
dragonfly         37.2 mbs STM32L476RE (TRNG) @80mhz  L476VG L476RG
mbed K64F         7.5 mbs  (TRNG)  @120mhz
mbed F469NI      37.2 mbs TRNG @168mhz
Teensy K66/K64    7.5 mbs  (TRNG) @120mhz  T3.6/T3.5
ESP32             6.4 mbs (TRNG) need wifi/ble running (not tested)
WICED            37.2 mbs (TRNG) STM32F205 @120mhz
nRF51822          0.01 mbs (TRNG)  microbit
Propeller         .16 mbs  RealRandom.spin CTR PLL jitter
mbed EVKB        .005 mbs  (TRNG) @600 mhz  (Teensy 4  .01 mbs)
adafruit M4       45 mbs   (TRNG) @120 mhz SAMD51

Teensy 3            136 bits/sec  6ms LPTMR0 and systick   entropy lib
UNO                  65 bits/sec  16ms WDT and TIMER1
UNO                4100 bits/sec  TrueRandom analogRead + wash  fails rngtest?
maple                98 bits/sec  10ms LSI and systick
mbed LPC1768       8192 bits/sec  WDT/RTC 32khz vs systick
ZERO               9727 bits/sec  ULPOSC32K vs systick
mbed F446RE         256 bits/sec  RTC vs systick

/dev/random
 Raspberry PI        13 bits/sec     (.56 mbs if /dev/hwrng available)
 beaglebone           5 bits/sec
 beaglebone black     1 bits/sec
 littlebits cloud     4 bits/sec
 intel edison       280 bits/sec
/dev/urandom
 Raspberry PI        8.8 mbs
 beaglebone          8.8 mbs
 beaglebone black    12 mbs
 littlebits cloud     4.1 mbs
 intel edison         8 mbs

Randomness checks with DieHard, rngtest, NIST, and Ent.

-------------------------------------------------------------------

https://sites.google.com/site/astudyofentropy/project-definition/raspberry-pi-internal-hardware-random-number-generator

https://sites.google.com/site/astudyofentropy/background-information/the-tests

https://sites.google.com/site/astudyofentropy/project-definition/timer-jitter-entropy-sources

https://code.google.com/p/tinkerit/wiki/TrueRandom

http://ianix.com/pub/comparing-dev-random-speed-linux-bsd.html

http://obex.parallax.com/object/498 RealRandom.spin
